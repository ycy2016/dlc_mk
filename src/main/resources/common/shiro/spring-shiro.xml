<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
						http://www.springframework.org/schema/context
 						http://www.springframework.org/schema/context/spring-context-3.0.xsd
 						http://www.springframework.org/schema/cache 
           				http://www.springframework.org/schema/cache/spring-cache-3.1.xsd
 						http://www.springframework.org/schema/data/mongo   
          				http://www.springframework.org/schema/data/mongo/spring-mongo.xsd
 						"
	default-autowire="byName" default-lazy-init="false">

	<!-- 自定义Realm -->
	<bean id="myRealm" class="com.mas.dtc.framework.shiromanager.MyRealm" />

	<bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.MemorySessionDAO" />

	<!-- 会话管理器 -->
	<bean id="sessionManager"
		class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<property name="sessionDAO" ref="sessionDAO" />
		 <!-- session的失效时长，单位毫秒 -->  
        <property name="globalSessionTimeout" value="3600000"/>  
        <!-- 删除失效的session -->  
        <property name="deleteInvalidSessions" value="true"/>  
	</bean>

	<!-- 安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="myRealm" />
		<property name="sessionManager" ref="sessionManager" />
	</bean>

	<!-- Shiro过滤器 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- Shiro的核心安全接口,这个属性是必须的 -->
		<property name="securityManager" ref="securityManager" />
		<!-- 认证失败，跳转的登录页面
		<property name="loginUrl" value="/dlc/warn/unauthen" /> -->
		<!-- 授权认证失败，选择要跳转的页面 
		 <property name="unauthorizedUrl" value="/dlc/warn/unauthor" /> -->
		<!--<property name="unauthorizedUrl" value="www.baidu.com" /> -->
	    <property name="filters">
		 	<map>
				<entry key="authc">
				<!-- 定制验证失败后逻辑... -->
					<bean class="com.mas.dtc.framework.shiromanager.AuthenticatioinFilter" />
				</entry>
				<entry key="roles">
				<!-- 定制验权失败逻辑... -->
					<bean class="com.mas.dtc.framework.shiromanager.AuthorFilter" />
				</entry>
			</map>
		</property> 
		<!-- Shiro连接约束配置,即过滤链的定义 -->
		<property name="filterChainDefinitions">
			<value>
				<!-- anon: 代表不需要认证和授权即可访问，对于静态资源，登录页面和登录按钮都设置为anon -->
				/dlc/user/login=anon
				/dlc/user/dologin=anon
				<!-- 未登录提示页面需要需要认证 -->
				/dlc/warn/unauthen=anon
				<!-- roles:先对请求认证,再检查是否授权 ,如果失败会跳转到unauthorizedUrl -->
				 /dlc/mapping/**=authc,roles["admin"]
				/dlc/cruduser/**=authc,roles["admin"]
				<!-- /rest/user/getData/**=authc,perms[admin:batchQuery] -->
				<!-- authc:经过MyReal的认证,才能访问  不能写成/**,这样会把js等前端资源拦截-->
				/dlc/**=authc
			</value>
		</property>
	</bean>

	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
	<!-- 开启Shiro注解 -->
	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor" />
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>
</beans>
